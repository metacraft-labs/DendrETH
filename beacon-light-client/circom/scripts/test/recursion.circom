pragma circom 2.0.3;

include "../../../../vendor/circom-pairing/circuits/bn254/groth16.circom";

template Recursion() {
  var gamma2[2][2][6] = [
    [
      [
        5896345417453,
        4240670514135,
        6172078461917,
        219834884668,
        2138480846496,
        206187650596
      ],
      [
        6286472319682,
        5759053266064,
        8549822680278,
        8639745994386,
        912741836299,
        219532437284
      ]
    ],
    [
      [
        4404069170602,
        525855202521,
        8311963231281,
        825823174727,
        854139906743,
        161342114743
      ],
      [
        3147424765787,
        7086132606363,
        7632907980226,
        5320198199754,
        6592898451945,
        77528801456
      ]
    ]
  ];

  var delta2[2][2][6] = [
    [
      [
        5896345417453,
        4240670514135,
        6172078461917,
        219834884668,
        2138480846496,
        206187650596
      ],
      [
        6286472319682,
        5759053266064,
        8549822680278,
        8639745994386,
        912741836299,
        219532437284
      ]
    ],
    [
      [
        4404069170602,
        525855202521,
        8311963231281,
        825823174727,
        854139906743,
        161342114743
      ],
      [
        3147424765787,
        7086132606363,
        7632907980226,
        5320198199754,
        6592898451945,
        77528801456
      ]
    ]
  ];

  var IC[2][2][6] = [
    [
      [
        6327173417741,
        8166828135494,
        4254690026241,
        4437500329398,
        4095155532307,
        129515772325
      ],
      [
        5248128203516,
        4354646636817,
        1375497359777,
        5680805779455,
        6687781913741,
        172672195922
      ]
    ],
    [
      [
        7662248648699,
        713882067633,
        3297676335667,
        8489972349370,
        6421232092624,
        339606158969
      ],
      [
        7792088535829,
        7667800571792,
        8453480095666,
        6927009512352,
        3350587463445,
        359073367745
      ]
    ]
  ];

  var negalfa1xbeta2[6][2][6] = [
    [
      [
        4063420080633,
        6555003798509,
        3528875089017,
        5800537096256,
        8041381108016,
        203518374640
      ],
      [
        7676269984398,
        1145806392863,
        6738515895690,
        5144301275423,
        8547057760405,
        353834589854
      ]
    ],
    [
      [
        5712635615088,
        8763475698695,
        7480760495871,
        1630925336586,
        5902994417779,
        229051200835
      ],
      [
        1066113280330,
        5452941452156,
        130670027992,
        6364438679415,
        8227984268724,
        117895881848
      ]
    ],
    [
      [
        2720638156466,
        8183746692879,
        2805734624200,
        4541538633192,
        1476702149455,
        162434980571
      ],
      [
        4093955238700,
        4839352246179,
        5773319594517,
        5269728708172,
        8404179905859,
        4522318692
      ]
    ],
    [
      [
        7907150524416,
        8555524456643,
        2425990496019,
        5117607179458,
        886559720121,
        343845114320
      ],
      [
        3348806304058,
        5295378168489,
        5426585403009,
        4313512356362,
        2882006508456,
        312905790371
      ]
    ],
    [
      [
        6984987484510,
        4411212100320,
        517962775393,
        5578757090043,
        1344911245314,
        115782940661
      ],
      [
        4257694794763,
        5641455412912,
        2987387394488,
        6147130513016,
        8766894161060,
        7451503335
      ]
    ],
    [
      [
        3338043330865,
        3023333978926,
        4787719622265,
        3729967781503,
        2489094582823,
        396043239802
      ],
      [
        3390886416082,
        169102433935,
        2279828268438,
        1618451670976,
        7055320302964,
        48334526481
      ]
    ]
  ];

  // proof
  signal input negpa[2][6];
  signal input pb[2][2][6];
  signal input pc[2][6];
  signal input pubInput[1];

  // check recursive snark
  component groth16Verifier = verifyProof(1);

  for (var i = 0;i < 6;i++) {
    for (var j = 0;j < 2;j++) {
      for (var idx = 0;idx < 6;idx++) {
        groth16Verifier.negalfa1xbeta2[i][j][idx] <== negalfa1xbeta2[i][j][idx];
      }
    }
  }

  for (var i = 0;i < 2;i++) {
    for (var j = 0;j < 2;j++) {
      for (var idx = 0;idx < 6;idx++) {
        groth16Verifier.gamma2[i][j][idx] <== gamma2[i][j][idx];
        groth16Verifier.delta2[i][j][idx] <== delta2[i][j][idx];
        groth16Verifier.IC[i][j][idx] <== IC[i][j][idx];
        groth16Verifier.pb[i][j][idx] <== pb[i][j][idx];
      }
    }
  }

  for (var i = 0;i < 2;i++) {
    for (var idx = 0;idx < 6;idx++) {
      groth16Verifier.negpa[i][idx] <== negpa[i][idx];
      groth16Verifier.pc[i][idx] <== pc[i][idx];
    }
  }

  groth16Verifier.pubInput[0] <== pubInput[0];

  groth16Verifier.out === 1;
}

component main = Recursion();
