processes:
  downloadZkAndDatFiles:
    description: download .zk and .dat files and verify their checksum
    working_dir: ./relay/process-compose-scripts/
    command: ./download-zk-and-dat-files.sh

  redis:
    description: redis
    log_location: ./logs/redis.log
    working_dir: ./relay/process-compose-scripts/
    command: ./start-redis.sh
    depends_on:
      downloadZkAndDatFiles:
        condition: process_completed
    availability:
      restart: always

  proverserver:
    description: proverserver
    environment:
      - 'HOST = ${PROVER_SERVER_HOST}'
    log_location: ./logs/prover_server.log
    working_dir: ./
    command: proverServer ${PROVER_SERVER_PORT} data/light_client.zkey
    depends_on:
      downloadZkAndDatFiles:
        condition: process_completed
    availability:
      restart: always
    readiness_probe:
      http_get:
        host: $HOST
        scheme: http
        path: '/status'
        port: ${PROVER_SERVER_PORT}
      initial_delay_seconds: 10
      period_seconds: 10
      success_threshold: 1
      timeout_seconds: 1
      failure_threshold: 120

  prometheus:
    description: prometheus
    log_location: ./logs/prometheus.log
    command: ./start-prometheus.sh
    working_dir: ./relay/process-compose-scripts/
    depends_on:
      downloadZkAndDatFiles:
        condition: process_completed
    availability:
      restart: always

  pollUpdatesWorker:
    description: pollUpdatesWorker
    log_location: ./logs/pollUpdatesWorker.log
    command: yarn run pollUpdatesWorker
    working_dir: ./relay
    depends_on:
      prometheus:
        condition: process_started
    availability:
      restart: always

  proofGenerationWorker:
    description: proofGenerationWorker
    log_location: ./logs/proofGenerationWorker.log
    command: yarn run proofGenerationWorker --prover ${PROVER_SERVER_HOST}:${PROVER_SERVER_PORT}
    working_dir: ./relay
    depends_on:
      pollUpdatesWorker:
        condition: process_started
    availability:
      restart: always

  cleaner:
    description: cleaner
    log_location: ./logs/cleaner.log
    command: yarn ts ./workers/cleaner.ts
    working_dir: ./relay/workers
    depends_on:
      downloadZkAndDatFiles:
        condition: process_completed

  sepolia:
    description: Start generating proofs for the contract on ${LC_SEPOLIA} and update it with them
    log_location: ./logs/sepolia.log
    command: yarn hardhat start-publishing --light-client ${LC_SEPOLIA} --network sepolia --follow-network ${FOLLOW_NETWORK_SEPOLIA} --slots-jump ${SLOTS_JUMP} --hashi ${SEPOLIA_HASHI} --prometheus-port 3004
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  fantom:
    description: Start generating proofs for the contract on ${LC_FANTOM} and update it with them
    log_location: ./logs/fantom.log
    command: yarn hardhat start-publishing --light-client ${LC_FANTOM} --network fantom --follow-network ${FOLLOW_NETWORK_FANTOM} --slots-jump ${SLOTS_JUMP} --prometheus-port 3007
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  alfajores:
    description: Start generating proofs for the contract on ${LC_ALFAJORES} and update it with them
    log_location: ./logs/alfajores.log
    command: yarn hardhat start-publishing --light-client ${LC_ALFAJORES} --network celo --follow-network ${FOLLOW_NETWORK_CELO} --slots-jump ${SLOTS_JUMP} --prometheus-port 3008
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  bsc:
    description: Start generating proofs for the contract on ${LC_BSC} and update it with them
    log_location: ./logs/bsc.log
    command: yarn hardhat start-publishing --light-client ${LC_BSC} --network bsc --follow-network ${FOLLOW_NETWORK_BSC} --slots-jump ${SLOTS_JUMP} --prometheus-port 3009
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  chiado:
    description: Start generating proofs for the contract on ${LC_CHIADO} and update it with them
    log_location: ./logs/chiado.log
    command: yarn hardhat start-publishing --light-client ${LC_CHIADO} --network chiado --follow-network ${FOLLOW_NETWORK_CHIADO} --slots-jump ${SLOTS_JUMP} --hashi ${CHIADO_HASHI}  --prometheus-port 3010
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  aurora:
    description: Start generating proofs for the contract on ${LC_AURORA} and update it with them
    log_location: ./logs/aurora.log
    command: yarn hardhat start-publishing --light-client ${LC_AURORA} --network aurora --follow-network ${FOLLOW_NETWORK_AURORA} --slots-jump ${SLOTS_JUMP} --prometheus-port 3013
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  gnosis:
    description: Start generating proofs for the contract on ${LC_GNOSIS} and update it with them
    log_location: ./logs/gnosis.log
    command: yarn hardhat start-publishing --light-client ${LC_GNOSIS} --network gnosis --follow-network ${FOLLOW_NETWORK_GNOSIS} --slots-jump ${SLOTS_JUMP} --prometheus-port 3014
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  lukso:
    description: Start generating proofs for the contract on ${LC_LUKSO} and update it with them
    log_location: ./logs/lukso.log
    command: yarn hardhat start-publishing --light-client ${LC_LUKSO} --network lukso --follow-network ${FOLLOW_NETWORK_LUKSO} --slots-jump ${SLOTS_JUMP} --hashi ${LUKSO_HASHI} --prometheus-port 3015
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  mainnet:
    description: Start generating proofs for the contract on ${LC_MAINNET} and update it with them
    log_location: ./logs/mainnet.log
    command: yarn hardhat start-publishing --light-client ${LC_MAINNET} --network mainnet --follow-network ${FOLLOW_NETWORK_MAINNET} --slots-jump ${SLOTS_JUMP} --hashi ${MAINNET_HASHI} --prometheus-port 3015
    working_dir: ./beacon-light-client/solidity
    depends_on:
      proverserver:
        condition: process_healthy

  general_logs:
    description: general_logs
    log_location: ./logs/general_logs.log
    command: yarn ts relayer_logger.ts
    working_dir: ./relay
    depends_on:
      proverserver:
        condition: process_healthy
